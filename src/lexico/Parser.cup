package Parser;

import java_cup.runtime.Symbol;
import java.util.ArrayList;
import org.json.simple.*;
import com.google.gson.*;
import AST.*;

parser code
{:

    private Symbol symbol;
    public JSONObject program_json = new JSONObject();
    private ArrayList<String> errors = new ArrayList<>();

    private boolean debug = true;

    public void unrecovered_syntax_error(Symbol cur_token){
        String error = "Se esperaba uno de los siguientes tokens },) \n";
        if(!errors.contains(error)){
            errors.add(error); 
        }
    }

    public void syntax_error(Symbol s){
        String error = "";
        if(s.value != null){
            error = "Error Sintáctico en la Línea " + (s.left+1) +
            " Columna "+s.right+ ". No se esperaba este componente: " +s.value + "\n";
        }else{
            error = "Se esperaba uno de los siguientes tokens },) \n";
        }
        errors.add(error);
    }

    public ArrayList<String> getErrors(){
        return errors;
    }

    public String print(JSONObject item){
        Gson gson = new GsonBuilder().setPrettyPrinting().create();
        JsonParser jp = new JsonParser();
        JsonElement je = jp.parse(item.toString());
        String prettyJsonString = gson.toJson(je);
        return prettyJsonString;
    }

    public Symbol getSymbol(){
        return symbol;
    }
:}

/* Returned by the lexical */
terminal LPARENTHESIS, RPARENTHESIS, LKEY, RKEY, LBRACKETS, RBRACKETS